C51 COMPILER V8.08   DS1302                                                                05/17/2015 14:19:43 PAGE 1   


C51 COMPILER V8.08, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN DS1302.OBJ
COMPILER INVOKED BY: D:\Program Files\keil-3\C51\BIN\C51.EXE DS1302.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "NEW_8051.H"
   2          #include "task.h"
   3          /******************************
   4          DS1302与RAM相关的寄存器分为两类:
   5          一类是单个RAM单元，共31个，
   6          每个单元组态为一个8位的字节，
   7          其命令控制字为C0H~FDH，
   8          其中奇数为读操作，
   9          偶数为写操作;
  10          ************************************/
  11          sbit T_CLK=P5^3;                    //DS1302引脚连接
  12          sbit T_IO =P0^5;
  13          sbit T_RST=P0^6;
  14          
  15          sbit ACC0=ACC^0;           //1bit数据存储位
  16          sbit ACC7=ACC^7;
  17          
  18          uchar code starts_time[7]={0x00,0x10,0x22,0x20,0x05,0x04,0x15};  //初始化后设置
  19          uchar  Sec;
  20          uchar  Cent;
  21          uchar  Hour;
  22          uchar  Year;
  23          uchar  Day;
  24          uchar  Week;
  25          uchar  Month;
  26          
  27          /******************************************************************/
  28          
  29          //根据选择调整相应项目
  30          void Set(uchar sel,uchar sel_1) 
  31          {
  32   1        uchar address,time;
  33   1        uchar max,min;
  34   1       if(sel==1)  {address=0x84; max=23;min=0;}    //小时
  35   1       if(sel==2)  {address=0x82; max=59;min=0;}    //分钟
  36   1       if(sel==3)  {address=0x80; max=59;min=0;}    //秒
  37   1       if(sel==4)  {address=0x88; max=12;min=1;}    //月
  38   1       if(sel==5)  {address=0x86; max=31;min=1;}    //日
  39   1       if(sel==6)  {address=0x8a; max=7;min=1;}    //星期
  40   1       
  41   1        time=R1302(address+1)/16*10+R1302(address+1)%16;         //变成BCD码
  42   1        if (sel_1==1) time++;  else time--;
  43   1        if(time>max) time=min;   
  44   1        if(time<min) time=max;
  45   1                 
  46   1        W1302(0x8e,0x00);
  47   1        W1302(address,time/10*16+time%10);             
  48   1        W1302(0x8e,0x80);  
  49   1      }
  50          
  51          //********DS1302读写程序***************//
  52          /******************************************************************** 
  53          函 数 名：RTInputByte()
  54          功    能：实时时钟写入一字节
  55          说    明：往DS1302写入1Byte数据 (内部函数)
C51 COMPILER V8.08   DS1302                                                                05/17/2015 14:19:43 PAGE 2   

  56          入口参数：d 写入的数据 
  57          返 回 值：无  
  58          ***********************************************************************/
  59          void RTInputByte(uchar d) 
  60          { 
  61   1          uchar h;
  62   1          ACC = d;
  63   1          for(h=8; h>0; h--)
  64   1          {
  65   2              T_IO = ACC0;           /*相当于汇编中的 RRC */
  66   2              T_CLK = 1;
  67   2              T_CLK = 0;
  68   2              ACC = ACC >> 1; 
  69   2          } 
  70   1      }
  71          /******************************************************************** 
  72          函 数 名：RTOutputByte()
  73          功    能：实时时钟读取一字节
  74          说    明：从DS1302读取1Byte数据 (内部函数)
  75          入口参数：无  
  76          返 回 值：ACC
  77          设    计：zhaojunjie           日    期：2002-03-19
  78          修    改：                     日    期： 
  79          ***********************************************************************/
  80          uchar RTOutputByte(void) 
  81          { 
  82   1          uchar h;
  83   1          for(h=8; h>0; h--)
  84   1          {
  85   2              ACC = ACC >>1;         /*相当于汇编中的 RRC */
  86   2              ACC7 = T_IO;
  87   2              T_CLK = 1;
  88   2              T_CLK = 0;
  89   2          } 
  90   1          return(ACC); 
  91   1      }
  92          /******************************************************************** 
  93          函 数 名：W1302()
  94          功    能：往DS1302写入数据
  95          说    明：先写地址，后写命令/数据 (内部函数)
  96          调    用：RTInputByte() , RTOutputByte()
  97          入口参数：ucAddr: DS1302地址, ucData: 要写的数据
  98          返 回 值：无
  99          ***********************************************************************/
 100          void W1302(uchar ucAddr, uchar ucDa)
 101          {
 102   1          T_RST = 0;
 103   1          T_CLK = 0;
 104   1          T_RST = 1;
 105   1          RTInputByte(ucAddr);       /* 地址，命令 */
 106   1          RTInputByte(ucDa);       /* 写1Byte数据*/
 107   1          T_CLK = 1;
 108   1          T_RST = 0;
 109   1      }
 110          /******************************************************************** 
 111          函 数 名：R1302()
 112          功    能：读取DS1302某地址的数据
 113          说    明：先写地址，后读命令/数据 (内部函数)
 114          调    用：RTInputByte() , RTOutputByte()
 115          入口参数：ucAddr: DS1302地址
 116          返 回 值：ucData :读取的数据
 117          ***********************************************************************/
C51 COMPILER V8.08   DS1302                                                                05/17/2015 14:19:43 PAGE 3   

 118          uchar R1302(uchar ucAddr)
 119          {
 120   1          uchar ucData;
 121   1          T_RST = 0;
 122   1          T_CLK = 0;
 123   1          T_RST = 1;
 124   1          RTInputByte(ucAddr);             /* 地址，命令 */
 125   1          ucData = RTOutputByte();         /* 读1Byte数据 */
 126   1          T_CLK = 1;
 127   1          T_RST = 0;
 128   1          return(ucData);
 129   1      }
 130          
 131          /******************************************************************** 
 132          函 数 名：Set1302()
 133          功    能：设置初始时间
 134          说    明：先写地址，后读命令/数据(寄存器多字节方式)
 135          调    用：W1302()
 136          入口参数：pClock: 设置时钟数据地址 格式为: 秒 分 时 日 月 星期 年
 137                                         7Byte (BCD码)1B 1B 1B 1B 1B  1B  1B
 138          返 回 值：无
 139          ***********************************************************************/
 140          void Set1302(uchar *pClock) 
 141          {
 142   1          uchar h;
 143   1          uchar ucAddr = 0x80; 
 144   1          W1302(0x8e,0x00);           /* 控制命令,WP=0,写操作?*/
 145   1          for(h =7; h>0; h--)
 146   1          { 
 147   2              W1302(ucAddr,*pClock);  /* 秒 分 时 日 月 星期 年 */ 
 148   2              pClock++;
 149   2              ucAddr +=2;
 150   2          }
 151   1                         W1302(ucNumRows_adder,0);
 152   1                 W1302(ucNumRows_p_adder,0);
 153   1                 W1302(DISP_TIME_adder,155); 
 154   1      //      W1302(0xc0,0x01);
 155   1      //      W1302(0XC2,0X03);                       //初始自动转换显示时间为3秒。
 156   1          W1302(0x8e,0x80);           /* 控制命令,WP=1,写保护?*/
 157   1      
 158   1      }
 159          
 160          void Auto_Set1302(uchar *pClock) 
 161          {
 162   1          uchar h;
 163   1          uchar ucAddr = 0x80; 
 164   1              if(((R1302(0x81))&0x80)==0x80)
 165   1              {
 166   2                  W1302(0x8e,0x00);           /* 控制命令,WP=0,写操作?*/
 167   2                  for(h =7; h>0; h--)
 168   2                  { 
 169   3                      W1302(ucAddr,*pClock);  /* 秒 分 时 日 月 星期 年 */ 
 170   3                      pClock++;
 171   3                      ucAddr +=2;
 172   3                  }
 173   2                 W1302(ucNumRows_adder,0);
 174   2                 W1302(ucNumRows_p_adder,0);
 175   2                  W1302(DISP_TIME_adder,155);  
 176   2                      
 177   2                      //W1302(0xc0,0x01);
 178   2                      //W1302(0XC2,0X03);                     //初始自动转换显示时间为3秒。
 179   2                  W1302(0x8e,0x80);           /* 控制命令,WP=1,写保护?*/
C51 COMPILER V8.08   DS1302                                                                05/17/2015 14:19:43 PAGE 4   

 180   2      
 181   2              }
 182   1      }
 183          /******************读取DS1302中的时间****************/
 184          void du1302()
 185          {
 186   1            Hour=R1302(0x85); //时
 187   1                TimeBuff[15]=Hour/16;
 188   1                TimeBuff[14]=Hour%16;
 189   1                TimeBuff[13]=10;//两点
 190   1                
 191   1                Cent=R1302(0x83);//分
 192   1                TimeBuff[12]=Cent/16;
 193   1                TimeBuff[11]=Cent%16;
 194   1                TimeBuff[10]=10;//两点
 195   1      
 196   1                Sec=R1302(0x81);//秒
 197   1                TimeBuff[9]=Sec/16;
 198   1                TimeBuff[8]=Sec%16;
 199   1      
 200   1                Month=R1302(0x89);//月
 201   1                TimeBuff[7]=Month/16;
 202   1                TimeBuff[6]=Month%16;
 203   1                TimeBuff[4]=11;//月字左边
 204   1                TimeBuff[5]=12;//月字右边
 205   1                
 206   1                Day=R1302(0x87);//日
 207   1                TimeBuff[3]=Day/16;
 208   1                TimeBuff[2]=Day%16;
 209   1                TimeBuff[0]=13;//日字左边
 210   1                TimeBuff[1]=14;//日字右边
 211   1      
 212   1                Week=R1302(0x8b);
 213   1                Year=R1302(0x8d);                             
 214   1                //b=R1302(0xc1);
 215   1            //a=R1302(0xc3);
 216   1                //a=a/16*10+a%16;
 217   1               
 218   1      }
 219          void du1302P()
 220          {
 221   1            Hour=R1302(0x85); //时
 222   1                TimeBuff[0]=Hour/16;
 223   1                TimeBuff[1]=Hour%16;
 224   1                TimeBuff[2]=10;//两点
 225   1                
 226   1                Cent=R1302(0x83);//分
 227   1                TimeBuff[3]=Cent/16;
 228   1                TimeBuff[4]=Cent%16;
 229   1                TimeBuff[5]=10;//两点
 230   1      
 231   1                Sec=R1302(0x81);//秒
 232   1                TimeBuff[6]=Sec/16;
 233   1                TimeBuff[7]=Sec%16;
 234   1      
 235   1                Month=R1302(0x89);//月
 236   1                TimeBuff[15]=Month/16;
 237   1                TimeBuff[14]=Month%16;
 238   1                TimeBuff[12]=11;//月字左边
 239   1                TimeBuff[13]=12;//月字右边
 240   1                
 241   1                Day=R1302(0x87);//日
C51 COMPILER V8.08   DS1302                                                                05/17/2015 14:19:43 PAGE 5   

 242   1                TimeBuff[11]=Day/16;
 243   1                TimeBuff[10]=Day%16;
 244   1                TimeBuff[8]=13;//日字左边
 245   1                TimeBuff[9]=14;//日字右边
 246   1      
 247   1                Week=R1302(0x8b);
 248   1                Year=R1302(0x8d);                             
 249   1                //b=R1302(0xc1);
 250   1            //a=R1302(0xc3);
 251   1                //a=a/16*10+a%16;
 252   1               
 253   1      }
 254          /*********************************************************************************************
 255          函数名：1302直接写数据程序
 256          调  用：write_1302Data
 257          参  数：无
 258          返回值：无
 259          结  果：时钟芯片直接写数据，自动打开写保护程序
 260          备  注：适用于DS1302芯片+32.768KHz6pF晶体
 261          /**********************************************************************************************/
 262          //void  write_1302Data (uchar  ucAddr,uchar  Value)
 263          //{   
 264          //      W1302(0x8e,0x00);           /* 控制命令,WP=0,写操作?*/ 
 265          //    W1302(ucAddr,Value);        //地址和数据
 266          //    W1302(0x8e,0x80);           /* 控制命令,WP=1,写保护?*/ 
 267          //}
 268          /*********************************************************************************/
 269          /*************************************************************************************
 270          ************************************************************************************
 271          ***********************                                     ***************************
 272          ***********************    http://59tiaoba.taobao.com       ***************************
 273          ***********************                                     ***************************
 274          ************************************************************************************
 275          **********************************************************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    657    ----
   CONSTANT SIZE    =      7    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
