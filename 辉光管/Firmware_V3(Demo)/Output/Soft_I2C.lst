C51 COMPILER V9.56.0.0   SOFT_I2C                                                          11/03/2018 11:26:33 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SOFT_I2C
OBJECT MODULE PLACED IN .\Output\Soft_I2C.obj
COMPILER INVOKED BY: F:\KEILC51+MDK\C51\BIN\C51.EXE STC15\Soft_I2C.c COMPACT OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;
                    -.\HardwareDrivers;.\STC15;.\App) DEBUG PRINT(.\Output\Soft_I2C.lst) OBJECT(.\Output\Soft_I2C.obj)

line level    source

   1          /**
   2           * 软件 I2C 函数库
   3           * 来源：改编自《时间触发嵌入式系统设计模式》中相关章节
   4           * 最后更新：2014-07-17
   5           * http://blanboom.org
   6           *********************************************************
   7           * 注意：
   8           *       1. I2C_Delay() 需要根据实际硬件调节延时时间
   9           *       2. I2C_Sync_The_Clock() 可能会因 I2C 总线错误而占用较长时间
  10           */
  11           
  12          #include "Soft_I2C.h"
  13          #include "PinDef.h"   // 需要在此文件中定义 I2C 引脚：I2C_SDA, I2C_SCL
  14          
  15          // 私有函数定义
  16          static uint8_t I2C_Get_Ack_From_Slave(void); 
  17          static bit     I2C_Sync_The_Clock(void);   
  18          static void    I2C_Delay(void);  
  19          
  20          // 如果不需要 ACK 和 NOT ACK，可以将下面一行注释掉
  21          #define I2C_ACK_NACK
  22          
  23          /**
  24           * void I2C_Send_Start(void)
  25           * 简介：产生 START 状态
  26           * 输入：无
  27           * 输出：无
  28           */
  29          void I2C_Send_Start(void)
  30          {
  31   1              I2C_Delay(); 
  32   1              // 初始化总线
  33   1              I2C_SCL = 1;
  34   1              I2C_SDA = 1;
  35   1              I2C_Delay(); 
  36   1      
  37   1              // 产生 START 状态
  38   1              I2C_SDA = 0;
  39   1              I2C_Delay();
  40   1              I2C_SCL = 0;
  41   1              I2C_Delay();
  42   1      }
  43          
  44          
  45          /**
  46           * void I2C_Send_Stop(void)
  47           * 简介：产生 STOP 状态
  48           * 输入：无
  49           * 输出：无
  50           */
  51          void I2C_Send_Stop(void)
  52          {
  53   1              I2C_Delay(); 
  54   1              I2C_SDA = 0; 
C51 COMPILER V9.56.0.0   SOFT_I2C                                                          11/03/2018 11:26:33 PAGE 2   

  55   1              I2C_Delay();   
  56   1              I2C_SCL = 1; 
  57   1              I2C_Delay();   
  58   1              I2C_SDA = 1;   
  59   1              I2C_Delay(); 
  60   1      }
  61          
  62          /**
  63           * uint8_t I2C_Get_Ack_From_Slave(void)
  64           * 简介：等待从机应答
  65           * 输入：无
  66           * 输出：
  67           *       I2C_OK       - 成功
  68           *       I2C_ERROR    - 失败
  69           */
  70          uint8_t I2C_Get_Ack_From_Slave(void)
  71          {
  72   1              // 初始化总线
  73   1              I2C_SDA = 1; 
  74   1              I2C_SCL = 1;
  75   1      
  76   1              if(I2C_Sync_The_Clock())
  77   1              {
  78   2                      return I2C_ERROR;  // 出错 - 同步失败
  79   2              }
  80   1      
  81   1              // 完成时钟同步
  82   1              I2C_Delay();       
  83   1      
  84   1              if (I2C_SDA)       
  85   1              {
  86   2                      // 产生时钟周期
  87   2                      I2C_SCL = 0;  
  88   2      
  89   2                      return I2C_ERROR;  // 出错 -  从机无应答
  90   2              }
  91   1      
  92   1              I2C_SCL = 0; // 产生时钟周期
  93   1      
  94   1              return I2C_OK;     // 成功 - 从机有应答
  95   1      }
  96          
  97          
  98          /**
  99           * uint8_t I2C_Write_Byte(uint8_t Data)
 100           * 简介：发送一个字节到从机
 101           * 功能：
 102           *     发送一个字节到从机。通过允许“时钟延伸”来支持低速从机
 103           *     运行时间 ~100 微秒（除非发生总线错误）
 104           * 输入：Data: 需要发送的字节
 105           * 输出：
 106           *     I2C_OK - 成功
 107           *     I2C_ERROR    - 失败   
 108           */
 109          uint8_t I2C_Write_Byte(uint8_t Data)
 110          {
 111   1              uint8_t Bit = 0;  
 112   1      
 113   1              // 每次发送一位数据（高位先发送）
 114   1              for (Bit = 0; Bit < 8; Bit++ )
 115   1              {
 116   2                      I2C_Delay();
C51 COMPILER V9.56.0.0   SOFT_I2C                                                          11/03/2018 11:26:33 PAGE 3   

 117   2                      I2C_SDA = (bit)((Data & 0x80) >> 7); 
 118   2                      I2C_SCL = 1;  
 119   2      
 120   2                      if (I2C_Sync_The_Clock() == I2C_ERROR)
 121   2                      {
 122   3                              return I2C_ERROR; // 出错 - 同步失败
 123   3                      }
 124   2      
 125   2                      I2C_Delay(); 
 126   2      
 127   2                      // 产生时钟周期
 128   2                      I2C_SCL = 0;                        
 129   2      
 130   2                      // 准备发送下一位
 131   2                      Data <<= 1;                    
 132   2              }
 133   1      
 134   1              // 确定从机有应答
 135   1              return(I2C_Get_Ack_From_Slave());
 136   1      }
 137          
 138          
 139          /**
 140           * uint8_t I2C_Read_Byte(void)
 141           * 简介：从从机读取一个字节
 142           * 功能：
 143           *       从从机读取一个字节的数据。通过允许“时钟延伸”来支持低速从机
 144           * 输入：无
 145           * 输出：
 146           *       读取的 I2C 字节，若失败则返回 I2C_ERROR
 147           */
 148          uint8_t I2C_Read_Byte(void)
 149          {
 150   1              uint8_t result  = 0;  // 返回读取的 I2C 字节
 151   1              uint8_t Bit = 0;      // 位计数器
 152   1      
 153   1              for(Bit = 0; Bit < 8; Bit++)
 154   1              {
 155   2                      I2C_SDA = 1;           // 释放 SDA
 156   2                      I2C_SCL = 1;           // 释放 SCL
 157   2      
 158   2                      if (I2C_Sync_The_Clock() == I2C_ERROR)
 159   2                      {
 160   3                              return I2C_ERROR;     // 出错 - 同步失败
 161   3                      }
 162   2      
 163   2                      I2C_Delay(); 
 164   2      
 165   2                      result <<= 1;      // 结果左移
 166   2      
 167   2                      if (I2C_SDA)
 168   2                      {
 169   3                              result |= 0x01;  // 最低位设置为实际的 SDA 状态
 170   3                      }
 171   2      
 172   2                      I2C_SCL = 0;       // 强制时钟周期
 173   2                      I2C_Delay();       
 174   2              }
 175   1              
 176   1              return result;
 177   1      }
 178          
C51 COMPILER V9.56.0.0   SOFT_I2C                                                          11/03/2018 11:26:33 PAGE 4   

 179          /**
 180           * bit I2C_Sync_The_Clock(void)
 181           * 简介：I2C 时钟同步
 182           * 功能：
 183           *       同步 I2C 时钟，I2C 数据传输使用的底层函数
 184           * 输入：无
 185           * 输出：
 186           *       I2C_ERROR - 出错（时钟未同步）
 187           *       I2C_OK    - 成功（时钟同步）
 188           */
 189          bit I2C_Sync_The_Clock(void)
 190          {
 191   1              uint16_t i;
 192   1              i = MAIN_Fosc / 13000;
 193   1              
 194   1              // 试图同步时钟
 195   1              while((I2C_SCL == 0) && (i != 0))
 196   1              {
 197   2                      i--;
 198   2              }
 199   1      
 200   1              if (i == 0)
 201   1              {
 202   2                      return I2C_ERROR;  // 错误 - 超时条件不满足
 203   2              }
 204   1      
 205   1              return I2C_OK;       // 成功 - 时钟同步
 206   1      }
 207          
 208          /**
 209           * void I2C_Delay(void)
 210           * 简介：I2C 延时
 211           * 功能：较短的软件延迟，应至少为 5.425 微秒
 212           * 输入：无
 213           * 输出：无
 214           */
 215          void I2C_Delay(void)
 216          {
 217   1              //@24MHz
 218   1              uint8_t i;
 219   1              _nop_();
 220   1              _nop_();
 221   1              _nop_();
 222   1              i = 50;
 223   1              while (--i);
 224   1      }
 225          
 226          #ifdef I2C_ACK_NACK
 227          
 228          /**
 229           * void I2C_Send_Master_Ack(void)
 230           * 简介：产生 ACK 状态
 231           * 输入：无
 232           * 输出：无
 233           */
 234          void I2C_Send_Master_Ack(void)
 235          {
 236   1        I2C_SDA = 0; 
 237   1        I2C_SCL = 1;
 238   1      
 239   1        I2C_Sync_The_Clock();
 240   1      
C51 COMPILER V9.56.0.0   SOFT_I2C                                                          11/03/2018 11:26:33 PAGE 5   

 241   1        I2C_Delay();  
 242   1        I2C_SCL = 0;  
 243   1      }
 244          
 245          
 246          /**
 247           * void I2C_Send_Master_Ack(void)
 248           * 简介：产生 NOT ACK 状态
 249           * 输入：无
 250           * 输出：无
 251           */
 252          void I2C_Send_Master_NAck(void)
 253          {
 254   1              I2C_SDA = 1; 
 255   1              I2C_SCL = 1; 
 256   1      
 257   1              I2C_Sync_The_Clock();
 258   1      
 259   1              I2C_Delay();
 260   1              I2C_SCL = 0;
 261   1      } 
 262          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    242    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       4
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
