C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\main.obj
COMPILER INVOKED BY: F:\KEILC51+MDK\C51\BIN\C51.EXE App\main.c COMPACT OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\App;.\Hard
                    -wareDrivers;.\STC15;.\App) DEBUG PRINT(.\Output\main.lst) OBJECT(.\Output\main.obj)

line level    source

   1          /**
   2           * 主程序
   3           * 作者：    hhelib
   4           * 最后更新：2016-03-12
   5           */
   6          #include "config.h"
   7          #include "Display.h"
   8          #include "TimeUpdate.h"
   9          #include "SD2405ALPI.h"
  10          #include "app.h"
  11          #include "delay.h"
  12          #include "timer.h"
  13          #include "RTC.h"
  14          #include "Sound.h"
  15          #include "Exti.h"
  16          #include "PinDef.h"
  17          #include "intrins.h"
  18          
  19          // 储存当前时间、闹钟、工作模式的全局变量，在 "app.h" 中声明
  20          // 时间
  21          uint8_t hour = 12;
  22          uint8_t minute = 59;
  23          uint8_t second = 59;
  24          uint8_t per25ms = 0;//计时用变量
  25          // 闹钟
  26          uint8_t hour_alarm = 12;
  27          uint8_t minute_alarm = 1;
  28          uint8_t second_alarm = 1;
  29          uint8_t alarmEnable = 0;
  30          // 夜间模式
  31          uint8_t sleepMode = 1;
  32          // 模式，有时钟模式和自定义显示模式
  33          uint8_t mode = MODE_CLOCK;//MODE_DISPLAY
  34          uint8_t set[8] = {10,10,10,10,10,10,10,10};//存储设定的时间信息，两个间隔位是无效的，默认显示杠
  35          int digit = 9;//counter for the current digit being set
  36          int num_set = 1;//the number to be set 
  37          int set_mode_flag = 0;//= 0 normal mode = 1 set mode
  38          int set_digit = 7;
  39          long time_to_Set = 0;
  40          int set_en = 0;
  41          int digit_jmp = 0;
  42          int wait_count = 0;
  43          long time_correct_count = 0;//periodical time correction
  44          
  45          void Set_time(void);
  46          void EXTI_config(void);
  47          
  48          sbit KEY_1 = P3^3;
  49          sbit KEY_2 = P3^6;
  50          sbit KEY_3 = P3^7;
  51          
  52          extern unsigned char keyboard_self(); 
  53          extern void key_process();
  54          
C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 2   

  55          int  main(void)
  56          {
  57   1              // 各种初始化
  58   1              EA = 0;
  59   1              displayInit();
  60   1              timerInit();
  61   1              //soundInit();
  62   1        //EXTI_config();
  63   1              Delay_ms(250);
  64   1              Delay_ms(250);
  65   1              Delay_ms(250);
  66   1              Delay_ms(250);
  67   1              getTime();
  68   1              EA = 1;
  69   1        while(1)
  70   1              {
  71   2                      time_correct_count ++;
  72   2                      /*adjust time under manually*/
  73   2                      if(set_mode_flag == 1){
  74   3                      /*function to display the adjustment process*/
  75   3                      Set_time();
  76   3                      }
  77   2                      /*adjust time every*/
  78   2                      if(time_correct_count == 100000ul){
  79   3                      getTime();
  80   3                      time_correct_count = 0;
  81   3                      }
  82   2                      /*function to display current time*/
  83   2                      displayTime();
  84   2                      key_process();
  85   2              }
  86   1      }
  87          
  88          #if 0
              void Ext_INT2 (void) interrupt INT2_VECTOR              //进中断时已经清除标志
              {
                              EA = 0;
                              //INT_CLKO &= 0xEF;
                              Delay_ms(100000);
                        //wait_count = 0;
                              if(set_mode_flag == 0){
                              set_mode_flag = 1;
                              digit = 9;
                              set_digit = 7;
                              }
                              else{
                              set_en = 1;
                              }
                              if(digit == 0){
                              set_mode_flag = 0;
                              }       
                              digit --;
                              //INT_CLKO &= 0x10;
                              EA = 1;
              }
              
              void Ext_INT3 (void) interrupt INT3_VECTOR              //进中断时已经清除标志
              {
                              EA = 0;
                              //INT_CLKO &= 0xDF;
                              Delay_ms(100000);
                        //wait_count = 0;
C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 3   

                              num_set ++;
                              if(num_set == 10)
                              num_set = 0;
                              //INT_CLKO |= 0xB20;
                              EA = 1;
              }
              
              void Ext_INT1 (void) interrupt INT1_VECTOR              //进中断时已经清除标志
              {
                              EA = 0;
                              //INT_CLKO &= 0xBF;
                              Delay_ms(100000);
                        //wait_count = 0;
                              num_set --;
                              if(num_set == -1)
                              num_set = 9;
                              //INT_CLKO |= 0x40;
                              EA = 1;
              }
              #endif
 137          
 138          void Set_time(void)
 139          {
 140   1              //'digit' is for display and 'digit_set' is for backgrounding settings
 141   1        while(1)
 142   1              {
 143   2                      key_process();
 144   2                      if(digit == 6){
 145   3                              digit = 5;
 146   3                      }
 147   2                      if(digit == 3){
 148   3                              digit = 2;
 149   3                      }
 150   2                      
 151   2                                      //display '-' while in setting mode 
 152   2                                      if(second % 2 == 0)//blink every seconds
 153   2                                      {
 154   3                                              /*
 155   3                                              wait_count++;
 156   3                                              if(wait_count == 50){
 157   3                                              wait_count = 0;
 158   3                                              set_mode_flag = 0;
 159   3                                              return;
 160   3                                              }
 161   3                                              */
 162   3                                              displayNumber(digit,num_set);//blink the digit set
 163   3                                              displayNumber(9,11);
 164   3                                              if(digit != 8)
 165   3                                              displayNumber(8,set[7]);
 166   3                                              if(digit != 7)
 167   3                                              displayNumber(7,set[6]);
 168   3                                                                                                                                                                                                                                                                                                                                                                                                                                              
 169   3                                              displayNumber(6,10);
 170   3                                              if(digit != 5)
 171   3                                              displayNumber(5,set[4]);
 172   3                                              if(digit != 4)
 173   3                                              displayNumber(4,set[3]);
 174   3                                      
 175   3                                              displayNumber(3,10);    
 176   3                                              if(digit != 2)
 177   3                                              displayNumber(2,set[1]);
 178   3                                              if(digit != 1)
C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 4   

 179   3                                              displayNumber(1,set[0]);                                
 180   3                                      }
 181   2                              else
 182   2                                      {
 183   3                                              displayNumber(digit,12);//blank
 184   3                                              displayNumber(9,11);
 185   3                                              if(digit != 8)
 186   3                                              displayNumber(8,set[7]);
 187   3                                              if(digit != 7)
 188   3                                              displayNumber(7,set[6]);
 189   3                                      
 190   3                                              displayNumber(6,10);
 191   3                                              if(digit != 5)
 192   3                                              displayNumber(5,set[4]);
 193   3                                              if(digit != 4)
 194   3                                              displayNumber(4,set[3]);
 195   3                                      
 196   3                                              displayNumber(3,10);
 197   3                                              if(digit != 2)
 198   3                                              displayNumber(2,set[1]);
 199   3                                              if(digit != 1)
 200   3                                              displayNumber(1,set[0]);                                
 201   3                                      }
 202   2                              //every time 'set' is pushed setting digit shift        
 203   2                              if(set_en == 1){        
 204   3                                      set_en = 0;                             
 205   3                                      if(set_digit == 5){
 206   4                                              set_digit = 4;//skip '-'
 207   4                                      }
 208   3                                      if(set_digit == 2){
 209   4                                              set_digit = 1;  
 210   4                                      }                               
 211   3                                      set[set_digit --] = num_set;                                    
 212   3      
 213   3                              }
 214   2                              if(digit < 0)
 215   2                              {
 216   3                                      if(set[7] < 3 && set[4] < 6 && set[1] <6){/*validate*/
 217   4                                      time_to_Set = set[7]*100000ul+set[6]*10000ul+set[4]*1000+set[3]*100+set[1]*10+set[0];
 218   4                                      }
 219   3                                      else{
 220   4                                      return;
 221   4                                      }
 222   3                                      SD2405ALPI_SetTime(time_to_Set);
 223   3                                      num_set = 0;
 224   3                                      getTime();
 225   3                                      set[7] = 10;
 226   3                                      set[6] = 10;
 227   3                                      set[4] = 10;
 228   3                                      set[3] = 10;
 229   3                                      set[1] = 10;
 230   3                                      set[0] = 10;
 231   3                                      set_digit = 7;
 232   3                                      digit = 9;
 233   3                                      return;
 234   3                              }
 235   2              }
 236   1      }
 237          
 238          /*
 239          sbit KEY_1 = P3^3;
 240          sbit KEY_2 = P3^6;
C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 5   

 241          sbit KEY_3 = P3^7;
 242          */
 243          //no key pushed -> num_key=0 some key pushed -> num_key 
 244          extern unsigned char keyboard_self() 
 245          { 
 246   1              unsigned char num_key=0;//key No.
 247   1              static unsigned char temp_code_1 = 0;
 248   1                                      static unsigned char temp_code_2 = 0;
 249   1                                      static unsigned char temp_code_3 = 0;
 250   1                                      static unsigned char key_value = 0;
 251   1              static unsigned char num_check=0;//de-vibrate 
 252   1              static unsigned char key_flag=0;//validity flag 
 253   1      
 254   1              temp_code_1 = (P3&0x08) >> 3;
 255   1              temp_code_2 = (P3&0x40) >> 6;
 256   1              temp_code_3 = (P3&0x80) >> 7;
 257   1              
 258   1              if(temp_code_1 == 0x00 || temp_code_2 == 0x00 || temp_code_3 == 0x00)
 259   1              { 
 260   2                      num_check ++; 
 261   2                      if(num_check == 4)
 262   2                      { 
 263   3                              key_flag=1;
 264   3                              if(temp_code_1 == 0x00){
 265   4                                                                                                      key_value = 1;
 266   4                                                                                                      temp_code_1 = 0;
 267   4                                                                                                      }
 268   3                                                                                                      else if(temp_code_2 == 0x00){
 269   4                                                                                                      key_value = 2;
 270   4                                                                                                      temp_code_2 = 0;        
 271   4                                                                                                      }
 272   3                                                                                                      else if(temp_code_3 == 0x00){
 273   4                                                                                                      key_value = 3;
 274   4                                                                                                      temp_code_3 = 0;
 275   4                                                                                                      }
 276   3                      } 
 277   2              } 
 278   1              else//release key
 279   1              { 
 280   2                      num_check=0; 
 281   2                      if(key_flag==1)
 282   2                      { 
 283   3                              key_flag=0;//clear flag
 284   3                              switch(key_value) 
 285   3                              { 
 286   4                                      case 1: num_key=1;
 287   4                                                 break; 
 288   4                                      case 2: num_key=2;
 289   4                                                 break; 
 290   4                                      case 3: num_key=3; 
 291   4                                                 break; 
 292   4                              } 
 293   3                      } 
 294   2              } 
 295   1              return(num_key); 
 296   1      }
 297          
 298          extern void key_process()
 299          {
 300   1                static int key_value_get = 0;
 301   1                      /*check key*/
 302   1                      key_value_get = keyboard_self();
C51 COMPILER V9.56.0.0   MAIN                                                              11/09/2018 18:43:01 PAGE 6   

 303   1                      if(key_value_get == 1){
 304   2                              /*K1*/
 305   2                              num_set --;
 306   2                              if(num_set == -1){
 307   3                              num_set = 9;
 308   3                              }
 309   2                      }
 310   1                      else if(key_value_get == 2){
 311   2                              /*K2*/
 312   2                                              if(set_mode_flag == 0){
 313   3                                              set_mode_flag = 1;
 314   3                                              digit = 9;
 315   3                                              set_digit = 7;
 316   3                                              }
 317   2                                              else{
 318   3                                              set_en = 1;
 319   3                                              }
 320   2                                              if(digit == 0){
 321   3                                              set_mode_flag = 0;
 322   3                                              }       
 323   2                                              digit --;
 324   2                                              }
 325   1                      else if(key_value_get == 3){
 326   2                              /*K3*/
 327   2                                              num_set ++;
 328   2                                              if(num_set == 10)
 329   2                                              num_set = 0;
 330   2                      }               
 331   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1127    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =     48    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
