C51 COMPILER V9.56.0.0   EEPROM                                                            10/26/2018 18:34:58 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: F:\KEILC51+MDK\C51\BIN\C51.EXE eeprom.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\eeprom.lst) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          
   4          
   5          #define CMD_IDLE    0               //空闲模式
   6          #define CMD_READ    1               //IAP字节读命令
   7          #define CMD_PROGRAM 2               //IAP字节编程命令
   8          #define CMD_ERASE   3               //IAP扇区擦除命令
   9          
  10          //#define ENABLE_IAP 0x80           //if SYSCLK<30MHz
  11          #define ENABLE_IAP 0x81           //if SYSCLK<24MHz
  12          //#define ENABLE_IAP  0x82            //if SYSCLK<20MHz
  13          //#define ENABLE_IAP 0x83           //if SYSCLK<12MHz
  14          //#define ENABLE_IAP 0x84           //if SYSCLK<6MHz
  15          //#define ENABLE_IAP 0x85           //if SYSCLK<3MHz
  16          //#define ENABLE_IAP 0x86           //if SYSCLK<2MHz
  17          //#define ENABLE_IAP 0x87           //if SYSCLK<1MHz
  18          
  19          
  20          /*----------------------------
  21          关闭IAP
  22          ----------------------------*/
  23          void IapIdle()
  24          {
  25   1          IAP_CONTR = 0;                  //关闭IAP功能
  26   1          IAP_CMD = 0;                    //清除命令寄存器
  27   1          IAP_TRIG = 0;                   //清除触发寄存器
  28   1          IAP_ADDRH = 0x80;               //将地址设置到非IAP区域
  29   1          IAP_ADDRL = 0;
  30   1      }
  31          
  32          /*----------------------------
  33          从ISP/IAP/EEPROM区域读取一字节
  34          ----------------------------*/
  35          u8 IapReadByte(u16 addr)
  36          {
  37   1          u8 dat;                       //数据缓冲区
  38   1      
  39   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  40   1          IAP_CMD = CMD_READ;             //设置IAP命令
  41   1          IAP_ADDRL = addr;               //设置IAP低地址
  42   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  43   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  44   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  45   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
  46   1          dat = IAP_DATA;                 //读ISP/IAP/EEPROM数据
  47   1          IapIdle();                      //关闭IAP功能
  48   1      
  49   1          return dat;                     //返回
  50   1      }
  51          
  52          /*----------------------------
  53          写一字节数据到ISP/IAP/EEPROM区域
  54          ----------------------------*/
C51 COMPILER V9.56.0.0   EEPROM                                                            10/26/2018 18:34:58 PAGE 2   

  55          void IapProgramByte(u16 addr, u8 dat)
  56          {
  57   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  58   1          IAP_CMD = CMD_PROGRAM;          //设置IAP命令
  59   1          IAP_ADDRL = addr;               //设置IAP低地址
  60   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  61   1          IAP_DATA = dat;                 //写ISP/IAP/EEPROM数据
  62   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  63   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  64   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
  65   1          IapIdle();
  66   1      }
  67          
  68          /*----------------------------
  69          扇区擦除
  70          ----------------------------*/
  71          void IapEraseSector(u16 addr)
  72          {
  73   1          IAP_CONTR = ENABLE_IAP;         //使能IAP
  74   1          IAP_CMD = CMD_ERASE;            //设置IAP命令
  75   1          IAP_ADDRL = addr;               //设置IAP低地址
  76   1          IAP_ADDRH = addr >> 8;          //设置IAP高地址
  77   1          IAP_TRIG = 0x5a;                //写触发命令(0x5a)
  78   1          IAP_TRIG = 0xa5;                //写触发命令(0xa5)
  79   1          _nop_();                        //等待ISP/IAP/EEPROM操作完成
  80   1          IapIdle();
  81   1      }
  82          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     78    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
