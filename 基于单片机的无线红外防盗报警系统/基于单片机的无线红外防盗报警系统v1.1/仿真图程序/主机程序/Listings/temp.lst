C51 COMPILER V9.59.0.0   TEMP                                                              05/21/2019 11:53:22 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE TEMP
OBJECT MODULE PLACED IN .\Objects\temp.obj
COMPILER INVOKED BY: F:\KEIL\C51\BIN\C51.EXE temp.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\temp.ls
                    -t) OBJECT(.\Objects\temp.obj)

line level    source

   1          #include "temp.h"
   2          //********带返回值的延时子程序***********                               
   3          void delay_TEMP(unsigned char time)     
   4          {
   5   1              unsigned char n;
   6   1              n=0;     
   7   1              while(n<time)n++;
   8   1              return;
   9   1      } 
  10          //********DS18B20复位********* 
  11          void Init_DS18B20(void)
  12          {
  13   1              DQ=1;           
  14   1              delay_TEMP(8);
  15   1              DQ=0;           
  16   1              delay_TEMP(85); 
  17   1              DQ=1;           
  18   1              delay_TEMP(34); 
  19   1      }
  20          //*******单片机向DS18B20写一个字节******
  21          unsigned char ReadOneChar(void)
  22          {
  23   1              unsigned char i=0;
  24   1              unsigned char dat=0;
  25   1              for(i=8;i>0;i--)
  26   1              {
  27   2                      DQ=1;
  28   2                      delay_TEMP(1);
  29   2                      DQ=0;
  30   2                      dat>>=1;
  31   2                      DQ=1;           
  32   2                      delay_TEMP(1);
  33   2                      if(DQ) dat|=0x80;
  34   2                      delay_TEMP(10);
  35   2              }
  36   1              return (dat);
  37   1      }
  38          //******单片机读DS18B20一个字节**********
  39          void WriteOneChar(unsigned char dat)
  40          {
  41   1              unsigned char i=0;
  42   1              for(i=8;i>0;i--)
  43   1              {
  44   2                      DQ=0;
  45   2                      DQ=dat&0x01;
  46   2                      delay_TEMP(5);
  47   2                      DQ=1;
  48   2                      dat>>=1;
  49   2              }
  50   1              delay_TEMP(10);
  51   1      }
  52          //*******单片机读取DS18B20的温度*********
  53          float ReadTemperature(void)
  54          {
C51 COMPILER V9.59.0.0   TEMP                                                              05/21/2019 11:53:22 PAGE 2   

  55   1              unsigned char tempL=0;
  56   1              unsigned char tempH=0;
  57   1              float temperature;
  58   1              Init_DS18B20();
  59   1              WriteOneChar(0xcc);
  60   1              WriteOneChar(0x44);
  61   1              delay_TEMP(30);
  62   1              Init_DS18B20();
  63   1              WriteOneChar(0xcc);
  64   1              WriteOneChar(0xbe);
  65   1              tempL=ReadOneChar();
  66   1              tempH=ReadOneChar();
  67   1              temperature=((tempH*256)+tempL)*0.0625;
  68   1              delay_TEMP(30);
  69   1              return(temperature);    //带返回值的程序，返回的值为温度值
  70   1      }
  71          /*******************************************************************************
  72          * 函 数 名         : datapros()
  73          * 函数功能                 : 温度读取处理转换函数
  74          * 输    入         : temp
  75          * 输    出         : 无
  76          *******************************************************************************/
  77          uint8_t Ds18b20DisplayData[4] = {0};
  78          
  79          uint8_t * Ds18b20_datapros(float temp)   
  80          {
  81   1              int n = 10 * temp;                                        //浮点型的m变成整型的n
  82   1              Ds18b20DisplayData[0] = n/100 + '0';
  83   1              Ds18b20DisplayData[1] = n%100/10 + '0';
  84   1              Ds18b20DisplayData[2] = '.';
  85   1              Ds18b20DisplayData[3] = n%10 + '0';           //整型的n拆位
  86   1              return Ds18b20DisplayData;
  87   1      }
  88          
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    308    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
